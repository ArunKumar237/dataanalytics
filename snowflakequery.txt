create database OUR_FIRST_DB;




CREATE TABLE OUR_FIRST_DB.PUBLIC."loan_payment" (
"loan_id" STRING,
"loan_status" STRING,
"principals" STRING,
"terms" STRING,
"effective_date" STRING,
"due_date" STRING,
"paid_off_time" STRING,
"past_due_date" STRING,
"age" STRING,
"education" STRING,
"gender" STRING
);


select * from loan_payment;


COPY INTO LOAN_PAYMENT
FROM s3://bucketsnowflakes3/Loan_payments_data.csv 
file_format = (type= csv
field_delimiter = ','
skip_header = 1)




CREATE OR REPLACE DATABASE MANAGE_DB;

CREATE OR REPLACE SCHEMA external_stages;


CREATE OR REPLACE STAGE MANAGE_DB.EXTERNAL_STAGES.aws_stage
url='s3://bucketsnowflakes3'
credentials=(aws_key_id='ABCD_DUMMY_ID',aws_secret_key='1234abcd_key')


DESC STAGE manage_db.external_stages.aws_stage;


ALTER STAGE aws_stage
SET credentials=(aws_key_id='XYZ_DUMMY_ID',aws_secret_key='1234abcd_key')



CREATE OR REPLACE STAGE MANAGE_DB.EXTERNAL_STAGES.aws_stage
url='s3://bucketsnowflakes3';



LIST @aws_stage;




COPY INTO LOAN_PAYMENT
FROM s3://bucketsnowflakes3/Loan_payments_data.csv 
file_format = (type= csv
field_delimiter = ','
skip_header = 1)


CREATE OR REPLACE TABLE OUR_FIRST_DB.PUBLIC.ORDERS(
ORDER_ID VARCHAR(30),
AMOUNT INT,
PROFIT INT,
QUANTITY INT,
CATEGORY VARCHAR(30),
SUBCATEGORY VARCHAR(30));

SELECT * FROM OUR_FIRST_DB.PUBLIC.ORDERS;

COPY INTO OUR_FIRST_DB.PUBLIC.ORDERS
FROM @MANAGE_DB.EXTERNAL_STAGES.aws_stage
file_format = (type = csv 
               field_delimiter=','
               skip_header=1)
files = ('OrderDetails.csv')


COPY INTO OUR_FIRST_DB.PUBLIC.ORDERS
FROM @MANAGE_DB.EXTERNAL_STAGES.aws_stage
file_format = (type = csv 
               field_delimiter=','
               skip_header=1)
PATTERN = '.*Order.*' ;


SELECT * FROM OUR_FIRST_DB.PUBLIC.ORDERS;


list @aws_stage;









CREATE OR REPLACE TABLE OUR_FIRST_DB.PUBLIC.ORDERS_EX(
ORDER_ID VARCHAR(30),
AMOUNT INT
);


SELECT * FROM OUR_FIRST_DB.PUBLIC.ORDERS_EX;




COPY INTO OUR_FIRST_DB.PUBLIC.ORDERS_EX
  FROM (select s.$1, s.$2 from @MANAGE_DB.EXTERNAL_STAGES.aws_stage s)
  FILE_FORMAT= (type = csv field_delimiter=',' skip_header=1)
  files=('OrderDetails.csv');



CREATE OR REPLACE TABLE OUR_FIRST_DB.PUBLIC.ORDERS_EX(
ORDER_ID VARCHAR(30),
AMOUNT INT,
PROFIT INT,
PROFITABLE_FLAG VARCHAR(30)
);

SELECT * FROM OUR_FIRST_DB.PUBLIC.ORDERS_EX;


COPY INTO OUR_FIRST_DB.PUBLIC.ORDERS_EX
  FROM (select 
        s.$1,
        s.$2,
        s.$3,
        CASE WHEN CAST(s.$3 as int) < 0 THEN 'not profitable' ELSE 'profitable' END
        from @MANAGE_DB.EXTERNAL_STAGES.aws_stage s)
  FILE_FORMAT= (type = csv field_delimiter=',' skip_header=1)
  files=('OrderDetails.csv');
  
  
  
  
  
  
  
  CREATE OR REPLACE TABLE OUR_FIRST_DB.PUBLIC.ORDERS_EX(
ORDER_ID VARCHAR(30),
AMOUNT INT,
PROFIT INT,
CATEGORY_SUBSTRING VARCHAR(5)
);

SELECT * FROM OUR_FIRST_DB.PUBLIC.ORDERS_EX;


COPY INTO OUR_FIRST_DB.PUBLIC.ORDERS_EX
  FROM (select 
        s.$1,
        s.$2,
        s.$3,
        substring(s.$5, 1, 5)
        from @MANAGE_DB.EXTERNAL_STAGES.aws_stage s)
  FILE_FORMAT= (type = csv field_delimiter=',' skip_header=1)
  files=('OrderDetails.csv');


SELECT * FROM OUR_FIRST_DB.PUBLIC.ORDERS_EX;


COPY INTO OUR_FIRST_DB.PUBLIC.ORDERS_EX(ORDER_ID,PROFIT)
  FROM (select 
        s.$1,
        s.$3
        from @MANAGE_DB.EXTERNAL_STAGES.aws_stage s)
  FILE_FORMAT= (type = csv field_delimiter=',' skip_header=1)
  files=('OrderDetails.csv');


CREATE OR REPLACE STAGE MANAGE_DB.EXTERNAL_STAGES.aws_stage_errorex
url='s3://bucketsnowflakes4'

LIST @MANAGE_DB.EXTERNAL_STAGES.aws_stage_errorex



CREATE OR REPLACE TABLE OUR_FIRST_DB.PUBLIC.ORDERS_EX(
ORDER_ID VARCHAR(30),
AMOUNT INT,
PROFIT INT,
QUANTITY INT,
CATEGORY VARCHAR(30),
SUBCATEGORY VARCHAR(30));




COPY INTO OUR_FIRST_DB.PUBLIC.ORDERS_EX
  FROM @MANAGE_DB.EXTERNAL_STAGES.aws_stage_errorex
  FILE_FORMAT= (type = csv field_delimiter=',' skip_header=1)
  files=('OrderDetails_error.csv','OrderDetails_error2.csv')
  ON_ERROR = 'CONTINUE';
  

select * from OUR_FIRST_DB.PUBLIC.ORDERS_EX;

SELECT COUNT(*) from OUR_FIRST_DB.PUBLIC.ORDERS_EX;






//------------------------------------------------------------------------------

//FILE FORMATS


CREATE OR REPLACE TABLE OUR_FIRST_DB.PUBLIC.ORDERS_EX(
ORDER_ID VARCHAR(30),
AMOUNT INT,
PROFIT INT,
QUANTITY INT,
CATEGORY VARCHAR(30),
SUBCATEGORY VARCHAR(30));



CREATE OR REPLACE SCHEMA MANAGE_DB.FILE_FORMATS;

CREATE OR REPLACE file format MANAGE_DB.FILE_FORMATS.my_file_format;

DESC file format MANAGE_DB.FILE_FORMATS.my_file_format;


COPY INTO OUR_FIRST_DB.PUBLIC.ORDERS_EX
  FROM @MANAGE_DB.EXTERNAL_STAGES.aws_stage_errorex
  FILE_FORMAT= (FORMAT_NAME=MANAGE_DB.FILE_FORMATS.my_file_format)
  files=('OrderDetails_error.csv','OrderDetails_error2.csv')
  ON_ERROR = 'SKIP_FILE_3';

SELECT * FROM OUR_FIRST_DB.PUBLIC.ORDERS_EX;

truncate table OUR_FIRST_DB.PUBLIC.ORDERS_EX; 


ALTER file format MANAGE_DB.FILE_FORMATS.my_file_format
  SET SKIP_HEADER = 1;


  
CREATE OR REPLACE file format MANAGE_DB.FILE_FORMATS.my_file_format
TYPE = CSV,
TIME_FORMAT=AUTO;

DESC file format MANAGE_DB.FILE_FORMATS.my_file_format;

ALTER file format MANAGE_DB.FILE_FORMATS.my_file_format
  SET TYPE = CSV;
  
  
  ----------------------------------------------------------------------------------------------------------------------------------





CREATE OR REPLACE DATABASE COPY_DB;


CREATE OR REPLACE TABLE COPY_DB.PUBLIC.ORDERS(
ORDER_ID VARCHAR(30),
AMOUNT INT,
PROFIT INT,
QUANTITY INT,
CATEGORY VARCHAR(30),
SUBCATEGORY VARCHAR(30));


CREATE OR REPLACE STAGE COPY_DB.PUBLIC.aws_stage_copy
url='s3://snowflakebucket-copyoption/size';

LIST @COPY_DB.PUBLIC.aws_stage_copy;


COPY INTO COPY_DB.PUBLIC.ORDERS
  FROM @aws_stage_copy
  file_format=(type=csv field_delimiter=',' skip_header=1)
  pattern='.*Order.*'
  VALIDATION_MODE = RETURN_ERRORS

SELECT * FROM COPY_DB.PUBLIC.ORDERS;
  



-----USE FILES WITH ERRORS----------------------------------


CREATE OR REPLACE STAGE COPY_DB.PUBLIC.aws_stage_copy
url='s3://snowflakebucket-copyoption/returnfailed/';


LIST @COPY_DB.PUBLIC.aws_stage_copy;


COPY INTO COPY_DB.PUBLIC.ORDERS
  FROM @aws_stage_copy
  file_format=(type=csv field_delimiter=',' skip_header=1)
  pattern='.*Order.*'
  VALIDATION_MODE = RETURN_ERRORS

  COPY INTO COPY_DB.PUBLIC.ORDERS
  FROM @aws_stage_copy
  file_format=(type=csv field_delimiter=',' skip_header=1)
  pattern='.*Order.*'
  VALIDATION_MODE = RETURN_1_ROWS


  ------WORKING WITH ERROR RESULTS---------------

  //SAVE REJECTED FILES AFTER VALIDATION MODE

CREATE OR REPLACE TABLE COPY_DB.PUBLIC.ORDERS(
ORDER_ID VARCHAR(30),
AMOUNT INT,
PROFIT INT,
QUANTITY INT,
CATEGORY VARCHAR(30),
SUBCATEGORY VARCHAR(30));



  COPY INTO COPY_DB.PUBLIC.ORDERS
  FROM @aws_stage_copy
  file_format=(type=csv field_delimiter=',' skip_header=1)
  pattern='.*Order.*'
  VALIDATION_MODE = RETURN_ERRORS;

  CREATE OR REPLACE TABLE rejected AS
  SELECT rejected_record from table(result_scan(last_query_id()));

  //01aa6dad-3200-a8f9-0002-ff460002a1da

  SELECT * FROM rejected;


  CREATE OR REPLACE TABLE rejected_vales as
  SELECT
  SPLIT_PART(rejected_record,',',1) as ORDER_ID,
  SPLIT_PART(rejected_record,',',2) as AMOUNT,
  SPLIT_PART(rejected_record,',',3) as PROFIT,
  SPLIT_PART(rejected_record,',',4) as QUANTITY,
  SPLIT_PART(rejected_record,',',5) as CATEGORY,
  SPLIT_PART(rejected_record,',',6) as SUBCATEGEORY
  FROM rejected;

  SELECT * FROM rejected_vales;
  
  
  -----------------------------------------------------------------------------------------------------------------------------



///--------------------RETURN_FAILED_ONLY-----------------------------------




CREATE OR REPLACE TABLE COPY_DB.PUBLIC.ORDERS(
ORDER_ID VARCHAR(30),
AMOUNT INT,
PROFIT INT,
QUANTITY INT,
CATEGORY VARCHAR(30),
SUBCATEGORY VARCHAR(30));


CREATE OR REPLACE STAGE COPY_DB.PUBLIC.aws_stage_copy
url='s3://snowflakebucket-copyoption/returnfailed/';

LIST @aws_stage_copy;


COPY INTO COPY_DB.PUBLIC.ORDERS
  FROM @aws_stage_copy
  file_format=(type=csv field_delimiter=',' skip_header=1)
  pattern='.*Order.*'
  RETURN_FAILED_ONLY = TRUE
